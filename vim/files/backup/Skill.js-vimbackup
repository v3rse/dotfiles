const mongoose = require('mongoose');
const BaseModel = require('../models/BaseModel');


const Schema = mongoose.Schema;

const skillSchema = new Schema({
  name: {
    type: String,
    required: true,
  },
  description: {
    type: String,
    required: true,
  },
  topic: {
    type: Schema.Types.ObjectId,
    ref: 'Topic',
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now(),
    required: true,
  },
  lastModified: {
    type: Date,
    default: Date.now(),
    required: true,
  },
  active: {
    type: Boolean,
    required: true,
    default: true,
  },
});

const Skill = mongoose.model('Skill', skillSchema);
const SkillModel = BaseModel(Skill);

SkillModel.getByIdWithTopic = id => new Promise((resolve, reject) => {
  Skill
      .findOne({
        _id: id,
      })
      .populate({
        path: 'topic',
        select: '-__v',
      })
      .exec((err, data) => {
        if (err) {
          reject(err);
        }

        resolve(data);
      });
});

SkillModel.findByTopic = topicId => new Promise((resolve, reject) => {
  Skill
      .find({
        topic: topicId,
      })
      .exec((err, data) => {
        if (err) {
          reject(err);
        }

        resolve(data);
      });
});
module.exports = SkillModel;
